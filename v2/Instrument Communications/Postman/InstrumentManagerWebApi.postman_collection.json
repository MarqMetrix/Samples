{
	"info": {
		"_postman_id": "cca8e834-7203-44d1-a182-6284b59176a6",
		"name": "MqMx Instruments Web Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Connectivity",
			"item": [
				{
					"name": "Generate Short Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"ShortCodeGenerationId\", pm.response.json().generationId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Origin",
								"value": "http://localhost:8796",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Referer",
								"value": "http://localhost:8796/",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Security/GenerateShortCode",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Security",
								"GenerateShortCode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Primary Api Key from Short Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"PrimaryApiKey\", pm.response.json().key);",
									"",
									"pm.environment.unset(\"ShortCodeGenerationId\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Primary\",\n\t\"generationId\": \"{{ShortCodeGenerationId}}\",\n\t\"shortCode\": \"451248379\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Security/AccessKey",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Security",
								"AccessKey"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Secondary Api Key from Short Code",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"PrimaryApiKey\", pm.response.json().key);",
									"",
									"pm.environment.unset(\"ShortCodeGenerationId\");"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Secondary\",\n\t\"generationId\": \"{{ShortCodeGenerationId}}\",\n\t\"shortCode\": \"467051395\"\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Security/AccessKey",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Security",
								"AccessKey"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Primary Api Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Primary\"\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Security/AccessKey",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Security",
								"AccessKey"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Secondary Api Key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"type\": \"Secondary\"\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Security/AccessKey",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Security",
								"AccessKey"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Instrument",
			"item": [
				{
					"name": "Get Instrument",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Installed Software",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Software",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Software"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Laser Enabled",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"isLaserEnabled\": true\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Display Name",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"displayName\": \"Test01\"\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Laser Disabled",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"isLaserEnabled\": false\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument"
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Continuous Acquisition",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"integrationTime\": \"00:00:00.100\",\n\t\"sampleAverageCount\": 1,\n\t\"laserPower\": 300,\n\t\"autoDark\": false,\n\t\"delay\": \"00:00:00.000\",\n\t\"metadata\": {\n\t\t\"test\": \"For Postman\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/StartContinuousAcquisition",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"StartContinuousAcquisition"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Continuous Acquisition",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/StopContinuousAcquisition",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"StopContinuousAcquisition"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Instrument Calibrations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var items = pm.response.json().items;",
									"",
									"if (items.length > 0) {",
									"    pm.environment.set(\"InstrumentCalibrationId\", items[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Calibration",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Calibration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Instrument Calibration",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var intensityCorrectionData = [];",
									"for (var i = 0; i < 2048; i++) {",
									"    intensityCorrectionData[i] = 1;",
									"}",
									"",
									"pm.environment.set(\"IntensityCorrectionData\", JSON.stringify(intensityCorrectionData));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"IntensityCorrectionData\");",
									"",
									"var item = pm.response.json();",
									"",
									"pm.environment.set(\"InstrumentCalibrationId\", item.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"createdBy\": \"Test Environment\",\n\t\"instrumentCalibration\": {\n\t\t\"laserWavelength\": 785.1547,\n\t\t\"arguments\": [7.874371e+02, 1.414304e-01, 1.095978e-05, -1.067649e-08, 1.853184e-12, -2.023975e-16],\n\t\t\"intensityCorrection\": {{IntensityCorrectionData}}\n\t}\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Calibration/Data",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Calibration",
								"Data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Instrument Calibration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Calibration/{{InstrumentCalibrationId}}",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Calibration",
								"{{InstrumentCalibrationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Instrument Calibration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.unset(\"InstrumentCalibrationId\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Calibration/{{InstrumentCalibrationId}}",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Calibration",
								"{{InstrumentCalibrationId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Samples",
			"item": [
				{
					"name": "List Samples",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var collectionResult = pm.response.json();",
									"",
									"var logStr = \"Sample Ids: \"; ",
									"var sampleIds = \"\";",
									"var sampleId;",
									"for (var i = 0; i < collectionResult.items.length; i++) {",
									"    if (i > 0) {",
									"        sampleIds += \", \";",
									"    }",
									"    logStr += collectionResult.items[i].id;",
									"    sampleId = sampleId || collectionResult.items[i].id;",
									"}",
									"pm.environment.set(\"SampleId\", sampleId);",
									"pm.environment.set(\"SamplesContinuationToken\", collectionResult.continuation);",
									"console.log(logStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Samples Continued",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"var collectionResult = pm.response.json();",
									"",
									"var logStr = \"Sample Ids: \"; ",
									"var sampleIds = \"\";",
									"var sampleId;",
									"for (var i = 0; i < collectionResult.items.length; i++) {",
									"    if (i > 0) {",
									"        sampleIds += \", \";",
									"    }",
									"    logStr += collectionResult.items[i].id;",
									"    sampleId = sampleId || collectionResult.items[i].id;",
									"}",
									"pm.environment.set(\"SampleId\", sampleId);",
									"pm.environment.set(\"SamplesContinuation\", collectionResult.continuation);",
									"console.log(\"Retrieved \" + collectionResult.items.length + \" samples\");",
									"console.log(logStr);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples?continuation={{SamplesContinuationToken}}",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples"
							],
							"query": [
								{
									"key": "continuation",
									"value": "{{SamplesContinuationToken}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Samples Filtered",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"darkSamples\": \"ExcludeDarkSamples\",\n\t\"maximumResults\": 10,\n\t\"validStatuses\": [\n\t\t\"Completed\"\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Last Dark Sample",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"darkSamples\": \"ExcludeLightSamples\",\n\t\"maximumResults\": 1,\n\t\"minimumIntegrationTime\": \"00:00:00.100\",\n\t\"maximumIntegrationTime\": \"00:00:00.100\",\n\t\"minimumSampleAverageCount\": 1,\n\t\"maximumSampleAverageCount\": 1,\n\t\"validStatuses\": [\n\t\t\"Completed\"\n\t\t]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Sample",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"SampleId\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"integrationTime\": \"00:00:00.1000\",\n\t\"sampleAverageCount\": 1,\n\t\"laserPower\": 300,\n\t\"metadata\": {\n\t\t\"ExperimentName\": \"My Run\",\n\t\t\"SampleName\": \"Water\",\n\t\t\"MetadataItem\": \"TestForPostman\"\n\t}\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/AcquireSample",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"AcquireSample"
							]
						}
					},
					"response": []
				},
				{
					"name": "Acquire Samples",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"SampleId\", pm.response.json().id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"items\": [\n\t\t{\n\t\t\t\"integrationTime\": \"00:00:00.1000\",\n\t\t\t\"sampleAverageCount\": 1,\n\t\t\t\"laserPower\": 300,\n\t\t\t\"failureRetryCount\": 4,\n\t\t\t\"metadata\": {\n\t\t\t\t\"ExperimentName\": \"My Run\",\n\t\t\t\t\"SampleName\": \"Water\",\n\t\t\t\t\"MetadataItem\": \"TestForPostman\"\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"integrationTime\": \"00:00:00.1000\",\n\t\t\t\"sampleAverageCount\": 1,\n\t\t\t\"laserPower\": 400,\n\t\t\t\"failureRetryCount\": 4,\n\t\t\t\"metadata\": {\n\t\t\t\t\"ExperimentName\": \"My Run\",\n\t\t\t\t\"SampleName\": \"Water\",\n\t\t\t\t\"MetadataItem\": \"TestForPostman\"\n\t\t\t}\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/AcquireSamples",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"AcquireSamples"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sample Acquisition Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples/{{SampleId}}",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples",
								"{{SampleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Sample Acquisition",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples/{{SampleId}}/Cancel",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples",
								"{{SampleId}}",
								"Cancel"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sample",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples/{{SampleId}}/Data",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples",
								"{{SampleId}}",
								"Data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Samples",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Instrument/Samples",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Instrument",
								"Samples"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Networking",
			"item": [
				{
					"name": "List Network Locations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var collectionResult = pm.response.json();",
									"",
									"pm.test(\"Has network location\", function() {",
									"   return collectionResult.items.length >= 1; ",
									"});",
									"",
									"if (collectionResult.items.length > 0) {",
									"    var networkLocation = collectionResult.items[0];",
									"    ",
									"    pm.environment.set(\"NetworkLocationId\", networkLocation.id);",
									"}"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Network Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"path\": \"\\\\\\\\192.168.50.105\\\\TestShare\",\r\n  \"credentials\": {\r\n    \"username\": \"TestUser\",\r\n    \"password\": \"password\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Network Location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations/{{NetworkLocationId}}",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations",
								"{{NetworkLocationId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Network Location Connectivity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations/{{NetworkLocationId}}/RefreshConnectivity",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations",
								"{{NetworkLocationId}}",
								"RefreshConnectivity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Default Network Export Settings",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations/DefaultExportSettings",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations",
								"DefaultExportSettings"
							]
						},
						"description": "List all Netshares"
					},
					"response": []
				},
				{
					"name": "Delete Default Network Export Settings",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations/DeleteDefaultExportSettings",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations",
								"DeleteDefaultExportSettings"
							]
						},
						"description": "List all Netshares"
					},
					"response": []
				},
				{
					"name": "Set Default Network Export Settings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"outputAxisAlignment\": \"RamanShift\",\r\n    \"outputProcessingType\": \"Raw\",\r\n    \"outputFileFormat\": \"SPC\",\r\n    \"filenameScheme\": \"{MachineName}\\\\\\r\\n{ExperimentName}\\\\\\r\\n{SampleId}{FileExtension}\",\r\n    \"networkLocationId\": \"b56cfd37-5e68-447d-80b4-94b2ab361369\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/NetworkLocations/SetDefaultExportSettings",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"NetworkLocations",
								"SetDefaultExportSettings"
							]
						},
						"description": "List all Netshares"
					},
					"response": []
				}
			]
		},
		{
			"name": "Logging",
			"item": [
				{
					"name": "Get Logging Configuration",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Logs/GetConfiguration",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Logs",
								"GetConfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Logging Configuration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"logLevel\": \"Warning\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Logs/SetConfiguration",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Logs",
								"SetConfiguration"
							]
						}
					},
					"response": []
				},
				{
					"name": "Log Dump",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Logs/Dump",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Logs",
								"Dump"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Log Raw",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Logs/Raw",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Logs",
								"Raw"
							]
						}
					},
					"response": []
				},
				{
					"name": "Clear Logs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Date",
								"value": "{{RequestDate}}"
							},
							{
								"key": "Authorization",
								"value": "SharedKey {{AuthenticationToken}}"
							}
						],
						"url": {
							"raw": "http://{{HostName}}:{{PortNumber}}/api/Logs/Clear",
							"protocol": "http",
							"host": [
								"{{HostName}}"
							],
							"port": "{{PortNumber}}",
							"path": [
								"api",
								"Logs",
								"Clear"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"var CryptoJS = require(\"crypto-js\");",
					"",
					"var date = new Date();",
					"var primaryApiKey = pm.environment.get(\"PrimaryApiKey\");",
					"",
					"if (primaryApiKey) {",
					"    var contentType = null;",
					"    var members = pm.request.headers.members;",
					"    for (var i = 0; i < members.length; i++) {",
					"        var header = members[i];",
					"        switch (header.key.toLowerCase())",
					"        {",
					"            case \"content-type\":",
					"                contentType = header.value;",
					"                break;",
					"        }",
					"    }",
					"    pm.environment.set(\"RequestDate\", date.toUTCString());",
					"    ",
					"    var path = pm.request.url.path.join(\"/\");",
					"    var variableRegex = new RegExp(\"\\\\{\\\\{[^\\\\}]+\\\\}\\\\}\");",
					"    ",
					"    var pathMatches = variableRegex.exec(path);",
					"    while (pathMatches && pathMatches.length > 0)",
					"    {",
					"        var pathMatch = pathMatches[0];",
					"        var matchIndex = path.indexOf(pathMatch);",
					"        var argument = pathMatch.substring(2, pathMatch.length - 2);",
					"            ",
					"        var argumentValue = pm.variables.get(argument);",
					"            ",
					"        path = path.substring(0, matchIndex) + argumentValue + path.substring(matchIndex + pathMatch.length);",
					"        ",
					"        pathMatches = variableRegex.exec(path);",
					"    }",
					"    ",
					"    var stringToHash = [",
					"        pm.request.method,",
					"        path,",
					"        contentType,",
					"        date.toUTCString()].join(\"\\n\");",
					"        ",
					"    console.log(\"Authorization String: \" + stringToHash);",
					"    ",
					"    var hash = CryptoJS.HmacSHA256(CryptoJS.enc.Utf8.parse(stringToHash), CryptoJS.enc.Base64.parse(primaryApiKey));",
					"    ",
					"    pm.environment.set(\"AuthenticationToken\", CryptoJS.enc.Base64.stringify(hash));",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.unset(\"RequestDate\");",
					"pm.environment.unset(\"AuthenticationToken\");"
				]
			}
		}
	]
}